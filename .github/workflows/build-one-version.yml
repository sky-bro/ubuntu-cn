name: "Build & Push One Version"

on:
  workflow_call:
    inputs:
      tags:
        required: true
        type: string
      registry_image:
        required: false
        default: 'skybro/ubuntu-cn'
        type: string
      build_args:
        required: false
        type: string
      platform:
        required: false
        type: string
        default: '["linux/amd64", "linux/arm/v7", "linux/arm64/v8"]'
    secrets:
      DOCKER_USER:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  get-first-tag:
    runs-on: ubuntu-latest
    outputs:
      first_tag: ${{ steps.first_tag.outputs.first_tag }}
    steps:
      - name: Get first TAG
        id: first_tag
        run: |
          echo "first_tag=$(echo "${{ inputs.tags }}" | head -n1)" >> $GITHUB_OUTPUT
  build:
    runs-on: ubuntu-latest
    needs: get-first-tag
    strategy:
      fail-fast: true
      matrix:
        platform: ${{ fromJSON(inputs.platform) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry_image }}
          tags: |
            ${{ inputs.tags }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          build-args: |
            ${{ inputs.build_args }}
            VERSION=${{ needs.get-first-tag.outputs.first_tag }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ inputs.registry_image }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests-${{ needs.get-first-tag.outputs.first_tag }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    runs-on: ubuntu-latest
    needs:
      - build
      - get-first-tag
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests-${{ needs.get-first-tag.outputs.first_tag }}
          path: /tmp/digests/
      - name: Delete Digest Artifact
        uses: geekyeggo/delete-artifact@v2
        with:
          name: digests-${{ needs.get-first-tag.outputs.first_tag }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry_image }}
          tags: |
            ${{ inputs.tags }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ inputs.registry_image }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ inputs.registry_image }}:$(echo "${{ inputs.tags }}" | head -n1)
